ibm.data$JobLevel<- as.factor(ibm.data$JobLevel)
summary(ibm.data)
sum(is.na(ibm.data))
#hist(ibm.data$DailyRate)
#hist(ibm.data$HourlyRate)
yes_month=ibm.data[ibm.data$Attrition == "Yes" & ibm.data$Department == "Sales",]
hist(yes_month$MonthlyIncome)
#hist(ibm.data$MonthlyRate)
hist(ibm.data$YearsAtCompany)
str(ibm.data)
dplyr::glimpse(ibm.data)
#dplyr::glimpse(ibm.data)
class(ibm.data)
dplyr::glimpse(ibm.data)
#prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel))
#prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel), margin = 1)
round(prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel), margin = 1), digits = 2)
#table(ibm.data$Attrition,ibm.data$Department)
#prop.table(table(ibm.data$Attrition,ibm.data$Department), margin = 2)
round(prop.table(table(ibm.data$Attrition,ibm.data$Department), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$EnvironmentSatisfaction)
#round(prop.table(table(ibm.data$Attrition,ibm.data$EnvironmentSatisfaction), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$Gender)
round(prop.table(table(ibm.data$Attrition,ibm.data$Gender), margin = 2), digits = 2)
round(prop.table(table(ibm.data$JobInvolvement)), digits = 2)
#table(ibm.data$Attrition,ibm.data$JobInvolvement)
round(prop.table(table(ibm.data$Attrition,ibm.data$JobInvolvement), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$JobLevel)
#round(prop.table(table(ibm.data$Attrition,ibm.data$JobLevel), margin = 2), digits = 2)
round(prop.table(table(ibm.data$Attrition,ibm.data$JobSatisfaction),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$MaritalStatus)
round(prop.table(table(ibm.data$Attrition,ibm.data$MaritalStatus),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$OverTime)
round(prop.table(table(ibm.data$Attrition,ibm.data$OverTime),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$RelationshipSatisfaction)
round(prop.table(table(ibm.data$Attrition,ibm.data$RelationshipSatisfaction),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$WorkLifeBalance)
round(prop.table(table(ibm.data$Attrition,ibm.data$WorkLifeBalance),margin = 2), digits = 2)
head(ibm.data)
library('lattice')
histogram(~ MonthlyIncome | Attrition, data = ibm.data)
histogram(~JobSatisfaction | Attrition, data = ibm.data)
histogram(~BusinessTravel | Attrition, data = ibm.data)
histogram(~DistanceFromHome | Attrition, data = ibm.data)
histogram(~Education | Attrition, data = ibm.data)
histogram(~EducationField | Attrition, data = ibm.data)
histogram(~EnvironmentSatisfaction | Attrition, data = ibm.data)
histogram(~Gender| Attrition, data = ibm.data)
histogram(~HourlyRate | Attrition, data = ibm.data)
histogram(~JobInvolvement | Attrition, data = ibm.data)
histogram(~JobRole | Attrition, data = ibm.data)
histogram(~MaritalStatus | Attrition, data = ibm.data)
histogram(~NumCompaniesWorked | Attrition, data = ibm.data)
histogram(~OverTime | Attrition, data = ibm.data)
histogram(~PercentSalaryHike | Attrition, data = ibm.data)
histogram(~PerformanceRating | Attrition, data = ibm.data)
histogram(~RelationshipSatisfaction | Attrition, data = ibm.data)
histogram(~TotalWorkingYears | Attrition, data = ibm.data)
histogram(~WorkLifeBalance | Attrition, data = ibm.data)
histogram(~YearsAtCompany | Attrition, data = ibm.data)
histogram(~YearsInCurrentRole | Attrition, data = ibm.data)
histogram(~YearsSinceLastPromotion | Attrition, data = ibm.data)
histogram(~YearsWithCurrManager | Attrition, data = ibm.data)
#boxplot(ibm.data$MonthlyIncome, main = "Income")
#boxplot(ibm.data$ï..Age, main = "Age")
bwplot(~ï..Age, ibm.data)
bwplot(~MonthlyIncome, ibm.data)
prop.table(table(ibm.data$Attrition, ibm.data$WorkLifeBalance, ibm.data$MaritalStatus))
ibm_rd_left = (ibm.data[ibm.data$Department=="Research & Development" & ibm.data$Attrition == 'Yes',])
hist(ibm_rd_left$DistanceFromHome)
ibm_RD = (ibm.data[ibm.data$Department=="Research & Development" & ibm.data$Attrition == 'Yes' & ibm.data$OverTime == 'Yes', ])
head(ibm_RD)
hist(ibm_RD$DistanceFromHome)
boxplot(ibm_RD$DistanceFromHome)
require('leaps')
install.packages("leaps")
library(leaps)
require('leaps')
#names(ibm.data)<-c("Age",'BusinessT','Department',"DistanceFHm","EnvironmentS", "Gender", "HourlyRate")
lps=regsubsets(Attition ~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender, data=ibm.data, method='backward')
#names(ibm.data)<-c("Age",'BusinessT','Department',"DistanceFHm","EnvironmentS", "Gender", "HourlyRate")
lps=regsubsets(Attrition ~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender, data=ibm.data, method='backward')
plot(lps, scale="adjr2" )
lps=regsubsets(Attrition ~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus,OverTime,PerformanceRating,RelationshipSatisfaction,WorkLifeBalance,YearsAtCompany,YearsSinceLastPromotion,YearsWithCurrManager, data=ibm.data, method='backward')
lps=regsubsets(Attrition ~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+PerformanceRating+RelationshipSatisfaction+WorkLifeBalance+YearsAtCompany+YearsSinceLastPromotion+YearsWithCurrManager, data=ibm.data, method='backward')
plot(lps, scale="adjr2" )
#lps=regsubsets(Attrition~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+PerformanceRating+RelationshipSatisfaction+WorkLifeBalance+YearsAtCompany+YearsSinceLastPromotion+YearsWithCurrManager, data=ibm.data, method='backward')
lps=regsubsets(Attrition~,nvmax = 34)
#lps=regsubsets(Attrition~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+PerformanceRating+RelationshipSatisfaction+WorkLifeBalance+YearsAtCompany+YearsSinceLastPromotion+YearsWithCurrManager, data=ibm.data, method='backward')
lps=regsubsets(Attrition~nvmax = 34)
#lps=regsubsets(Attrition~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+PerformanceRating+RelationshipSatisfaction+WorkLifeBalance+YearsAtCompany+YearsSinceLastPromotion+YearsWithCurrManager, data=ibm.data, method='backward')
lps=regsubsets(Attrition~.,nvmax = 34)
#lps=regsubsets(Attrition~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+PerformanceRating+RelationshipSatisfaction+WorkLifeBalance+YearsAtCompany+YearsSinceLastPromotion+YearsWithCurrManager, data=ibm.data, method='backward')
lps=regsubsets(Attrition~.,data=ibm.data,nvmax = 34)
ibm.model= glm(Attrition~.,data=ibm.data, family = binomial)
ifelse(n <- sapply(ibm.data[, l], function(x) length(levels(x))) == 1, "DROP", "NODROP")
ifelse(n <- sapply(ibm.data[, 1], function(x) length(levels(x))) == 1, "DROP", "NODROP")
ibm.data= read.csv("C:/Users/Pooh/Desktop/IS665/Term Project/WA_Fn-UseC_-HR-Employee-Attrition.csv", header= T)
#View(ibm.data)
head(ibm.data)
summary(ibm.data)
write.csv(ibm.data,"HRAttrition.csv")
ibm.data= read.table("C:/Users/Pooh/Desktop/IS665/Term Project/WA_Fn-UseC_-HR-Employee-Attrition.csv",sep = "\t", header= T)
write.csv(ibm.data,"HRAttrition.csv")
ibm.data= read.table("C:/Users/Pooh/Desktop/IS665/Term Project/HRAttrition.csv", header= T)
ibm.data= read.table("C:/Users/Pooh/Desktop/IS665/Term Project/HRAttrition.csv", header= T)
ibm.data= read.table("C:/Users/Pooh/Desktop/IS665/Term Project/HRAttrition.csv", header= T)
ibm.data= read.table("C:/Users/Pooh/Desktop/IS665/Term Project/HRAttrition.csv", header= T)
ibm.data= read.csv("C:/Users/Pooh/Desktop/IS665/Term Project/HRAttrition.csv", header= T)
#View(ibm.data)
head(ibm.data)
summary(ibm.data)
table(ibm.data$Education, ibm.data$EducationField)
#table(ibm.data$EmployeeNumber)
ibm.data$Education<- as.factor(ibm.data$Education)
ibm.data$JobSatisfaction<- as.factor(ibm.data$JobSatisfaction)
ibm.data$NumCompaniesWorked<- as.factor(ibm.data$NumCompaniesWorked)
ibm.data$PerformanceRating<- as.factor(ibm.data$PerformanceRating)
ibm.data$RelationshipSatisfaction<- as.factor(ibm.data$RelationshipSatisfaction)
ibm.data$StockOptionLevel<- as.factor(ibm.data$StockOptionLevel)
ibm.data$WorkLifeBalance<- as.factor(ibm.data$WorkLifeBalance)
ibm.data$EmployeeCount<- as.factor(ibm.data$EmployeeCount)
ibm.data$Education<- as.factor(ibm.data$Education)
ibm.data$JobSatisfaction<- as.factor(ibm.data$JobSatisfaction)
ibm.data$NumCompaniesWorked<- as.factor(ibm.data$NumCompaniesWorked)
ibm.data$PerformanceRating<- as.factor(ibm.data$PerformanceRating)
ibm.data$RelationshipSatisfaction<- as.factor(ibm.data$RelationshipSatisfaction)
ibm.data$StockOptionLevel<- as.factor(ibm.data$StockOptionLevel)
ibm.data$WorkLifeBalance<- as.factor(ibm.data$WorkLifeBalance)
ibm.data$EmployeeNumber<- as.factor(ibm.data$EmployeeNumber)
ibm.data$EnvironmentSatisfaction<- as.factor(ibm.data$EnvironmentSatisfaction)
ibm.data$JobInvolvement<- as.factor(ibm.data$JobInvolvement)
ibm.data$JobLevel<- as.factor(ibm.data$JobLevel)
dplyr::glimpse(ibm.data)
sum(is.na(ibm.data))
#hist(ibm.data$DailyRate)
#hist(ibm.data$HourlyRate)
yes_month=ibm.data[ibm.data$Attrition == "Yes" & ibm.data$Department == "Sales",]
hist(yes_month$MonthlyIncome)
#hist(ibm.data$MonthlyRate)
hist(ibm.data$YearsAtCompany)
#prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel))
#prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel), margin = 1)
round(prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel), margin = 1), digits = 2)
#table(ibm.data$Attrition,ibm.data$Department)
#prop.table(table(ibm.data$Attrition,ibm.data$Department), margin = 2)
round(prop.table(table(ibm.data$Attrition,ibm.data$Department), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$EnvironmentSatisfaction)
#round(prop.table(table(ibm.data$Attrition,ibm.data$EnvironmentSatisfaction), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$Gender)
round(prop.table(table(ibm.data$Attrition,ibm.data$Gender), margin = 2), digits = 2)
round(prop.table(table(ibm.data$JobInvolvement)), digits = 2)
#table(ibm.data$Attrition,ibm.data$JobInvolvement)
round(prop.table(table(ibm.data$Attrition,ibm.data$JobInvolvement), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$JobLevel)
#round(prop.table(table(ibm.data$Attrition,ibm.data$JobLevel), margin = 2), digits = 2)
round(prop.table(table(ibm.data$Attrition,ibm.data$JobSatisfaction),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$MaritalStatus)
round(prop.table(table(ibm.data$Attrition,ibm.data$MaritalStatus),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$OverTime)
round(prop.table(table(ibm.data$Attrition,ibm.data$OverTime),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$RelationshipSatisfaction)
round(prop.table(table(ibm.data$Attrition,ibm.data$RelationshipSatisfaction),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$WorkLifeBalance)
round(prop.table(table(ibm.data$Attrition,ibm.data$WorkLifeBalance),margin = 2), digits = 2)
head(ibm.data)
library('lattice')
histogram(~ MonthlyIncome | Attrition, data = ibm.data)
histogram(~JobSatisfaction | Attrition, data = ibm.data)
histogram(~BusinessTravel | Attrition, data = ibm.data)
histogram(~DistanceFromHome | Attrition, data = ibm.data)
histogram(~Education | Attrition, data = ibm.data)
histogram(~EducationField | Attrition, data = ibm.data)
histogram(~EnvironmentSatisfaction | Attrition, data = ibm.data)
histogram(~Gender| Attrition, data = ibm.data)
histogram(~HourlyRate | Attrition, data = ibm.data)
histogram(~JobInvolvement | Attrition, data = ibm.data)
histogram(~JobRole | Attrition, data = ibm.data)
histogram(~MaritalStatus | Attrition, data = ibm.data)
histogram(~NumCompaniesWorked | Attrition, data = ibm.data)
histogram(~OverTime | Attrition, data = ibm.data)
histogram(~PercentSalaryHike | Attrition, data = ibm.data)
histogram(~PerformanceRating | Attrition, data = ibm.data)
histogram(~RelationshipSatisfaction | Attrition, data = ibm.data)
histogram(~TotalWorkingYears | Attrition, data = ibm.data)
histogram(~WorkLifeBalance | Attrition, data = ibm.data)
histogram(~YearsAtCompany | Attrition, data = ibm.data)
histogram(~YearsInCurrentRole | Attrition, data = ibm.data)
histogram(~YearsSinceLastPromotion | Attrition, data = ibm.data)
histogram(~YearsWithCurrManager | Attrition, data = ibm.data)
#boxplot(ibm.data$MonthlyIncome, main = "Income")
#boxplot(ibm.data$ï..Age, main = "Age")
bwplot(~ï..Age, ibm.data)
#boxplot(ibm.data$MonthlyIncome, main = "Income")
#boxplot(ibm.data$ï..Age, main = "Age")
bwplot(~Age, ibm.data)
bwplot(~MonthlyIncome, ibm.data)
prop.table(table(ibm.data$Attrition, ibm.data$WorkLifeBalance, ibm.data$MaritalStatus))
ibm_rd_left = (ibm.data[ibm.data$Department=="Research & Development" & ibm.data$Attrition == 'Yes',])
hist(ibm_rd_left$DistanceFromHome)
ibm_RD = (ibm.data[ibm.data$Department=="Research & Development" & ibm.data$Attrition == 'Yes' & ibm.data$OverTime == 'Yes', ])
head(ibm_RD)
hist(ibm_RD$DistanceFromHome)
boxplot(ibm_RD$DistanceFromHome)
ibm.model= glm(Attrition~.,data=ibm.data, family = binomial)
summary(ibm.model)
ibm.data$Education<- as.factor(ibm.data$Education)
ibm.data$JobSatisfaction<- as.factor(ibm.data$JobSatisfaction)
ibm.data$NumCompaniesWorked<- as.factor(ibm.data$NumCompaniesWorked)
ibm.data$PerformanceRating<- as.factor(ibm.data$PerformanceRating)
ibm.data$RelationshipSatisfaction<- as.factor(ibm.data$RelationshipSatisfaction)
ibm.data$StockOptionLevel<- as.factor(ibm.data$StockOptionLevel)
ibm.data$WorkLifeBalance<- as.factor(ibm.data$WorkLifeBalance)
ibm.data$EnvironmentSatisfaction<- as.factor(ibm.data$EnvironmentSatisfaction)
ibm.data$JobInvolvement<- as.factor(ibm.data$JobInvolvement)
ibm.data$JobLevel<- as.factor(ibm.data$JobLevel)
dplyr::glimpse(ibm.data)
lps=regsubsets(Attrition~ Department+DistanceFromHome+EnvironmentSatisfaction+Gender+HourlyRate+JobInvolvement+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+PerformanceRating+RelationshipSatisfaction+WorkLifeBalance+YearsAtCompany+YearsSinceLastPromotion+YearsWithCurrManager, data=ibm.data, method='backward')
#lps=regsubsets(Attrition~.,data=ibm.data,nvmax = 34)
plot(lps, scale="adjr2" )
head(ibm.data)
library('lattice')
histogram(~ MonthlyIncome | Attrition, data = ibm.data)
histogram(~JobSatisfaction | Attrition, data = ibm.data)
histogram(~Department | Attrition, data = ibm.data)
histogram(~JobLevel | Attrition, data = ibm.data)
histogram(~BusinessTravel | Attrition, data = ibm.data)
histogram(~DistanceFromHome | Attrition, data = ibm.data)
histogram(~Education | Attrition, data = ibm.data)
histogram(~EducationField | Attrition, data = ibm.data)
histogram(~EnvironmentSatisfaction | Attrition, data = ibm.data)
histogram(~Gender| Attrition, data = ibm.data)
histogram(~HourlyRate | Attrition, data = ibm.data)
histogram(~JobInvolvement | Attrition, data = ibm.data)
histogram(~JobRole | Attrition, data = ibm.data)
histogram(~MaritalStatus | Attrition, data = ibm.data)
histogram(~NumCompaniesWorked | Attrition, data = ibm.data)
histogram(~OverTime | Attrition, data = ibm.data)
histogram(~PercentSalaryHike | Attrition, data = ibm.data)
histogram(~PerformanceRating | Attrition, data = ibm.data)
histogram(~RelationshipSatisfaction | Attrition, data = ibm.data)
histogram(~TotalWorkingYears | Attrition, data = ibm.data)
histogram(~WorkLifeBalance | Attrition, data = ibm.data)
histogram(~YearsAtCompany | Attrition, data = ibm.data)
histogram(~YearsInCurrentRole | Attrition, data = ibm.data)
histogram(~YearsSinceLastPromotion | Attrition, data = ibm.data)
histogram(~YearsWithCurrManager | Attrition, data = ibm.data)
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("lattice", lib.loc="C:/Program Files/R/R-3.4.1/library")
xyplot(Attrition~JobSatisfaction,ibm.data)
xyplot(~JobSatisfaction,ibm.data)
head(ibm.data)
library('lattice')
histogram(~JobSatisfaction | Attrition, data = ibm.data)
histogram(~Department | Attrition, data = ibm.data)
histogram(~JobLevel | Attrition, data = ibm.data)
histogram(~BusinessTravel | Attrition, data = ibm.data)
histogram(~DistanceFromHome | Attrition, data = ibm.data)
histogram(~Education | Attrition, data = ibm.data)
histogram(~EducationField | Attrition, data = ibm.data)
histogram(~EnvironmentSatisfaction | Attrition, data = ibm.data)
histogram(~Gender| Attrition, data = ibm.data)
histogram(~HourlyRate | Attrition, data = ibm.data)
histogram(~JobInvolvement | Attrition, data = ibm.data)
histogram(~JobRole | Attrition, data = ibm.data)
histogram(~MaritalStatus | Attrition, data = ibm.data)
histogram(~NumCompaniesWorked | Attrition, data = ibm.data)
histogram(~OverTime | Attrition, data = ibm.data)
histogram(~PercentSalaryHike | Attrition, data = ibm.data)
histogram(~PerformanceRating | Attrition, data = ibm.data)
histogram(~RelationshipSatisfaction | Attrition, data = ibm.data)
histogram(~TotalWorkingYears | Attrition, data = ibm.data)
histogram(~WorkLifeBalance | Attrition, data = ibm.data)
histogram(~YearsAtCompany | Attrition, data = ibm.data)
histogram(~YearsInCurrentRole | Attrition, data = ibm.data)
histogram(~YearsSinceLastPromotion | Attrition, data = ibm.data)
histogram(~YearsWithCurrManager | Attrition, data = ibm.data)
head(ibm.data)
library('lattice')
histogram(~JobSatisfaction | Attrition, data = ibm.data)
histogram(~Department | Attrition, data = ibm.data)
histogram(~JobLevel | Attrition, data = ibm.data)
#histogram(~BusinessTravel | Attrition, data = ibm.data)
#histogram(~DistanceFromHome | Attrition, data = ibm.data)
#histogram(~Education | Attrition, data = ibm.data)
#histogram(~EducationField | Attrition, data = ibm.data)
#histogram(~EnvironmentSatisfaction | Attrition, data = ibm.data)
#histogram(~Gender| Attrition, data = ibm.data)
##histogram(~HourlyRate | Attrition, data = ibm.data)
#histogram(~JobInvolvement | Attrition, data = ibm.data)
histogram(~JobRole | Attrition, data = ibm.data)
histogram(~MaritalStatus | Attrition, data = ibm.data)
#histogram(~NumCompaniesWorked | Attrition, data = ibm.data)
histogram(~OverTime | Attrition, data = ibm.data)
#histogram(~PercentSalaryHike | Attrition, data = ibm.data)
#histogram(~PerformanceRating | Attrition, data = ibm.data)
histogram(~RelationshipSatisfaction | Attrition, data = ibm.data)
histogram(~TotalWorkingYears | Attrition, data = ibm.data)
#histogram(~WorkLifeBalance | Attrition, data = ibm.data)
histogram(~YearsAtCompany | Attrition, data = ibm.data)
histogram(~YearsInCurrentRole | Attrition, data = ibm.data)
histogram(~YearsSinceLastPromotion | Attrition, data = ibm.data)
histogram(~YearsWithCurrManager | Attrition, data = ibm.data)
ibm.model= glm(Attrition~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager,data=ibm.data, family = binomial)
summary(ibm.model)
ibm.model= glm(Attrition~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager,, family = "binomial",data=ibm.data)
summary(ibm.model)
ibm.model= glm(Attrition~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager, family = "binomial",data=ibm.data)
summary(ibm.model)
glmulti.logistic.out <-
glmulti(Attrition~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager,
level = 1,               # No interaction considered
method = "h",            # Exhaustive approach
crit = "aic",            # AIC as criteria
confsetsize = 5,         # Keep 5 best models
plotty = F, report = F,  # No plot or interim reports
fitfunction = "glm",     # glm function
family = binomial)       # binomial family for logistic regression
install.packages("glmulti")
library(glmulti)
glmulti.logistic.out <-
glmulti(Attrition~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager,
level = 1,               # No interaction considered
method = "h",            # Exhaustive approach
crit = "aic",            # AIC as criteria
confsetsize = 5,         # Keep 5 best models
plotty = F, report = F,  # No plot or interim reports
fitfunction = "glm",     # glm function
family = binomial)       # binomial family for logistic regression
library("glmulti", lib.loc="~/R/win-library/3.4")
install.packages("rJava")
library(rJava)
require(rJava)
require(rJava)
ibm.data= read.csv("C:/Users/Pooh/Desktop/IS665/Term Project/HRAttrition.csv", header= T)
#View(ibm.data)
head(ibm.data)
summary(ibm.data)
pie=ggplot(ibm.data , aes(x=factor(1), fill=Attrition))+
geom_bar(width = 1)+
coord_polar("y")
library("ggplot2", lib.loc="~/R/win-library/3.4")
pie=ggplot(ibm.data , aes(x=factor(1), fill=Attrition))+
geom_bar(width = 1)+
coord_polar("y")
pie
round(prop.table(table(ibm.data$Attrition)),digit=2)
table(ibm.data$Education, ibm.data$EducationField)
#table(ibm.data$EmployeeNumber)
hist(ibm.data$JobSatisfaction)
abline(v = mean(ibm.data$JobSatisfaction), col = "blue", lwd = 2)
#Average job satisfaction of employees is 2.7
ibm.data$Education<- as.factor(ibm.data$Education)
ibm.data$JobSatisfaction<- as.factor(ibm.data$JobSatisfaction)
ibm.data$NumCompaniesWorked<- as.factor(ibm.data$NumCompaniesWorked)
ibm.data$PerformanceRating<- as.factor(ibm.data$PerformanceRating)
ibm.data$RelationshipSatisfaction<- as.factor(ibm.data$RelationshipSatisfaction)
ibm.data$StockOptionLevel<- as.factor(ibm.data$StockOptionLevel)
ibm.data$WorkLifeBalance<- as.factor(ibm.data$WorkLifeBalance)
ibm.data$EnvironmentSatisfaction<- as.factor(ibm.data$EnvironmentSatisfaction)
ibm.data$JobInvolvement<- as.factor(ibm.data$JobInvolvement)
ibm.data$JobLevel<- as.factor(ibm.data$JobLevel)
dplyr::glimpse(ibm.data)
sum(is.na(ibm.data))
#hist(ibm.data$DailyRate)
#hist(ibm.data$HourlyRate)
yes_month=ibm.data[ibm.data$Attrition == "Yes" & ibm.data$Department == "Sales",]
hist(yes_month$MonthlyIncome)
#hist(ibm.data$MonthlyRate)
hist(ibm.data$YearsAtCompany)
#prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel))
#prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel), margin = 1)
round(prop.table(table(ibm.data$Attrition,ibm.data$BusinessTravel), margin = 1), digits = 2)
#table(ibm.data$Attrition,ibm.data$Department)
#prop.table(table(ibm.data$Attrition,ibm.data$Department), margin = 2)
round(prop.table(table(ibm.data$Attrition,ibm.data$Department), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$EnvironmentSatisfaction)
#round(prop.table(table(ibm.data$Attrition,ibm.data$EnvironmentSatisfaction), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$Gender)
round(prop.table(table(ibm.data$Attrition,ibm.data$Gender), margin = 2), digits = 2)
round(prop.table(table(ibm.data$JobInvolvement)), digits = 2)
#table(ibm.data$Attrition,ibm.data$JobInvolvement)
round(prop.table(table(ibm.data$Attrition,ibm.data$JobInvolvement), margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$JobLevel)
#round(prop.table(table(ibm.data$Attrition,ibm.data$JobLevel), margin = 2), digits = 2)
round(prop.table(table(ibm.data$Attrition,ibm.data$JobSatisfaction),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$MaritalStatus)
round(prop.table(table(ibm.data$Attrition,ibm.data$MaritalStatus),margin = 1), digits = 2)
#table(ibm.data$Attrition,ibm.data$OverTime)
round(prop.table(table(ibm.data$Attrition,ibm.data$OverTime),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$RelationshipSatisfaction)
round(prop.table(table(ibm.data$Attrition,ibm.data$RelationshipSatisfaction),margin = 2), digits = 2)
#table(ibm.data$Attrition,ibm.data$WorkLifeBalance)
round(prop.table(table(ibm.data$Attrition,ibm.data$WorkLifeBalance),margin = 2), digits = 2)
head(ibm.data)
library('lattice')
histogram(~JobSatisfaction | Attrition, data = ibm.data)
histogram(~Department | Attrition, data = ibm.data)
histogram(~JobLevel | Attrition, data = ibm.data)
#histogram(~BusinessTravel | Attrition, data = ibm.data)
#histogram(~DistanceFromHome | Attrition, data = ibm.data)
#histogram(~Education | Attrition, data = ibm.data)
#histogram(~EducationField | Attrition, data = ibm.data)
histogram(~EnvironmentSatisfaction | Attrition, data = ibm.data)
#histogram(~Gender| Attrition, data = ibm.data)
##histogram(~HourlyRate | Attrition, data = ibm.data)
#histogram(~JobInvolvement | Attrition, data = ibm.data)
histogram(~JobRole | Attrition, data = ibm.data)
histogram(~MaritalStatus | Attrition, data = ibm.data)
#histogram(~NumCompaniesWorked | Attrition, data = ibm.data)
histogram(~OverTime | Attrition, data = ibm.data)
#histogram(~PercentSalaryHike | Attrition, data = ibm.data)
#histogram(~PerformanceRating | Attrition, data = ibm.data)
histogram(~RelationshipSatisfaction | Attrition, data = ibm.data)
histogram(~TotalWorkingYears | Attrition, data = ibm.data)
#histogram(~WorkLifeBalance | Attrition, data = ibm.data)
histogram(~YearsAtCompany | Attrition, data = ibm.data)
histogram(~YearsInCurrentRole | Attrition, data = ibm.data)
#histogram(~YearsSinceLastPromotion | Attrition, data = ibm.data)
histogram(~YearsWithCurrManager | Attrition, data = ibm.data)
histogram(~EnvironmentSatisfaction, data = ibm.data)
mean(as.numeric(ibm.data$EnvironmentSatisfaction))
#boxplot(ibm.data$MonthlyIncome, main = "Income")
#boxplot(ibm.data$ï..Age, main = "Age")
bwplot(~Age, ibm.data)
bwplot(~MonthlyIncome, ibm.data)
prop.table(table(ibm.data$Attrition, ibm.data$WorkLifeBalance, ibm.data$MaritalStatus))
ibm_rd_left = (ibm.data[ibm.data$Department=="Research & Development" & ibm.data$Attrition == 'Yes',])
hist(ibm_rd_left$DistanceFromHome)
ibm_RD = (ibm.data[ibm.data$Department=="Research & Development" & ibm.data$Attrition == 'Yes' & ibm.data$OverTime == 'Yes', ])
head(ibm_RD)
hist(ibm_RD$DistanceFromHome)
boxplot(ibm_RD$DistanceFromHome)
set.seed(1234)
indicies=sample(1:2 , length(ibm.data$Age) , replace = T, prob=c(.8,.2))
ibm.train =ibm.data[indicies==1,]
ibm.test  =ibm.data[indicies==2,]
ibm.model= glm(Attrition~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager, family = "binomial",data=ibm.train)
summary(ibm.model)
#This package requies JDK files in Program Files to run
#install.packages("rJava")
#install.packages("glmulti")
#library(glmulti)
require('glmulti')
ibm.glmulti.model <-
glmulti(Attrition ~Department+EnvironmentSatisfaction+Gender+JobLevel+JobRole+JobSatisfaction+MaritalStatus+OverTime+TotalWorkingYears+RelationshipSatisfaction+YearsAtCompany+YearsInCurrentRole+YearsSinceLastPromotion+YearsWithCurrManager,data= ibm.train,
level = 1,               # interaction considered
method = "h",            # genetic approach
crit = "aic",            # AIC as criteria
confsetsize = 2,         # Keep 2 best models
plotty = F, report = F,  # No plot or interim reports
fitfunction = "glm",     # glm function
family = binomial)       # binomial family for logistic regression
riskdata= read.csv("C:/Users/Pooh/Desktop/IS665/ClassifyRisk_historical.csv", header = T)
head(riskdata)
input_variables<-subset(riskdata, select=c('age', 'income'))
input_label<-riskdata$risk
n_input_variables = sapply(input_variables, function(x) {
(x - min(x))/(max(x) - min(x))
})
input_label<-as.factor(input_label)
set.seed(1234)
sample_indicies = sample(1:2, size = length(riskdata$risk), replace = T,
prob = c(0.8, 0.2))
## Data Split
train_data = n_input_variables[sample_indicies == 1, ]
test_data = n_input_variables[sample_indicies == 2, ]
## Label Split
train_labels = input_label[sample_indicies == 1]
test_labels = input_label[sample_indicies == 2]
test_data<-data.frame(test_data, test_labels)
head(test_data)
train_data<-data.frame(train_data, train_labels)
head(train_data)
require('tree')
my.model<-tree(train_labels~age+income, data=train_data)
require('tree')
my.model<-tree(train_labels~age+income, data=train_data)
install.packages('tree')
require('tree')
my.model<-tree(train_labels~age+income, data=train_data)
plot(my.model)
text(my.model)
my.predictions=predict(my.model, test_data, type='class')
my.predictions
[
my.predictions=predict(my.model, test_data, type='class')
my.predictions
results=data.frame(my.predictions,test_data$test_labels )
table(results)
cv_tree=cv.tree(my.model, FUN=prune.misclass)
names(cv_tree)
plot( cv_tree$size, cv_tree$dev , type='b')
pruned.model<-prune.misclass(my.model, best=6)
plot(pruned.model)
text(pruned.model)
pruned.predictions<-predict(pruned.model, test_data, type='class')
table(pruned.predictions, test_data$test_labels)
summary(ibm.glmulti.model@objects[[1]])
#summary(ibm.glmulti.model@objects[[2]])
table(ibm.test$Attrition)
round(prop.table(table(ibm.test$Attrition)),digits = 2)
ibm.pmodel=ibm.glmulti.model@objects[[1]]
my.predictions=predict(ibm.pmodel,ibm.test, type='response' )
predicted.classes=as.integer(ifelse(my.predictions>0.5, 1,0))
table(predicted.classes, ibm.test$Attrition)
# Required Accuracy
8/(31+8)
#Model Accuracy
(251+8)/296
setwd("C:/Manthans Work/GitHub/Staff Attrition")
ibm.data= read.csv("C:/Manthans Work/GitHub/Staff Attrition/HRAttrition.csv", header= T)
